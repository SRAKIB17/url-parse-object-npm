var _Url_url, _Url_urlString, __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (t, l, e, r, i) { if ("m" === r) throw TypeError("Private method is not writable"); if ("a" === r && !i) throw TypeError("Private accessor was defined without a setter"); if ("function" == typeof l ? t !== l || !i : !l.has(t)) throw TypeError("Cannot write private member to an object whose class did not declare it"); return "a" === r ? i.call(t, e) : i ? i.value = e : l.set(t, e), e }, __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (t, l, e, r) { if ("a" === e && !r) throw TypeError("Private accessor was defined without a getter"); if ("function" == typeof l ? t !== l || !r : !l.has(t)) throw TypeError("Cannot read private member from an object whose class did not declare it"); return "m" === e ? r : "a" === e ? r.call(t) : r ? r.value : l.get(t) }; class Url { constructor(t) { var l, e; _Url_url.set(this, void 0), _Url_urlString.set(this, void 0), __classPrivateFieldSet(this, _Url_url, t, "f"); let { protocol: r, hash: i, hostname: s, origin: a, password: n, path: u, port: o, query: d, username: v } = this.urlParse, c = null === (e = null === (l = null == Object ? void 0 : Object.entries(d)) || void 0 === l ? void 0 : l.map(t => `${null == t ? void 0 : t[0]}=${null == t ? void 0 : t[1]}`)) || void 0 === e ? void 0 : e.join("&"); __classPrivateFieldSet(this, _Url_urlString, `${r ? `${r}://` : ""}${v || ""}${n ? `:${n}@` : v ? "@" : ""}${s || ""}:${o || ""}${u || ""}${c ? `?${c}` : ""}${i ? `#${i}` : ""}`, "f") } get urlParse() { let t = __classPrivateFieldGet(this, _Url_url, "f"), l = /\?([^#]*)/, e = t.match(/^(?:(https?|ftp|file|www):\/\/)?(?:([^:]+)(?::([^@]+))?@)?([a-zA-Z0-9.-]+|(?:\d{1,3}\.){3}\d{1,3}|\[[a-fA-F0-9:]+\])(?::(\d+))?(\/[^?#]*)?(\?[^#]*)?(#.*)?$/), r = t.match(/#([^]*)/), i = r && r[1] || null, s = e && e[1] || null, a = e && e[2] || null, n = e && e[3] || null, u = e && e[4] || null, o = e && e[5] || null, d = e && e[6] || null, v = e && (u ? s ? `${s}://${u}` : u : null) || null; return { path: d, hash: i, protocol: s, origin: v, username: a, password: n, hostname: u, port: o, query: function e() { let r = t.match(l); if (!r || !r[1]) return {}; { let i = decodeURIComponent(r[1]), s = i.split("&"), a = null == s ? void 0 : s.map(t => { let [l, e] = t.split("="); return { [l]: e } }), n = Object.assign({}, ...a); return n } }() } } get(t) { return this.urlParse[t] } toString() { return __classPrivateFieldGet(this, _Url_urlString, "f") } set(t, l) { var e, r; let i = Object.assign(Object.assign({}, this.urlParse), { [t]: l }), { protocol: s, hash: a, hostname: n, origin: u, password: o, path: d, port: v, query: c, username: h } = i, f = null === (r = null === (e = null == Object ? void 0 : Object.entries(c)) || void 0 === e ? void 0 : e.map(t => `${null == t ? void 0 : t[0]}=${null == t ? void 0 : t[1]}`)) || void 0 === r ? void 0 : r.join("&"); __classPrivateFieldSet(this, _Url_urlString, `${s ? `${s}://` : ""}${h || ""}${o ? `:${o}@` : h ? "@" : ""}${n || ""}:${v || ""}${d || ""}${f ? `?${f}` : ""}${a ? `#${a}` : ""}`, "f") } } _Url_url = new WeakMap, _Url_urlString = new WeakMap; module.exports = Url;